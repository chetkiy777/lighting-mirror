{"version":3,"sources":["style.module.css","store/mainReducer.js","components/InputData.jsx","components/ShowInfo.jsx","components/ResultData.jsx","img/logo.png","components/Header.jsx","App.js","store/store.js","index.js","components/style.module.css"],"names":["module","exports","SET_MKV","SET_MPOG","SET_AMALGAMA","SET_AMALGAMA_COAST","SET_LIGHT_TYPE_COAST","SET_SHOW_INFO","SET_BUTTON_COAST","SET_POWER_BLOCK","SET_LIPS_COAST","initialState","data","height","width","kol","isAmalgama","lightType","mkv","mpog","coastAmalgama","profileCoast","showInfo","btnTypeCoast","coastLED","powerBlockType","coastLips","setButtonCoast","type","showInfoToggle","setPowerBlock","payload","setLipsCoast","mainReducer","state","action","coastLightType","InputData","isImage","useSelector","dispatch","useDispatch","className","style","leftSide","onSubmit","e","preventDefault","value","form","currentTarget","checked","btnType","lips","setMkv","setMpog","setAmalgama","setAmalgamaCoast","inp","name","placeholder","isAmalg","label","htmlFor","select","selectBtnType","getBtn","ShowInfo","showInfoBlock","toFixed","onClick","ResultData","summ","rightSide","results","Header","header","logo","src","href","App","props","wrapper","path","render","rootReducer","combineReducers","store","createStore","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.9d9cd39f.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"wrapper\":\"style_wrapper__2aHBA\",\"leftSide\":\"style_leftSide__dbdHf\",\"rightSide\":\"style_rightSide__3Y6E1\"};","const SET_MKV = 'SET_MKV'\r\nconst SET_MPOG = 'SET_MPOG'\r\nconst SET_AMALGAMA = 'SET_AMALGAMA'\r\nconst SET_AMALGAMA_COAST = 'SET_AMALGAMA_COAST'\r\nconst SET_LIGHT_TYPE_COAST = 'SET_LIGHT_TYPE_COAST'\r\nconst SET_SHOW_INFO = 'SET_SHOW_INFO'\r\nconst SET_BUTTON_COAST = 'SET_BUTTON_COAST'\r\nconst SET_POWER_BLOCK = 'SET_POWER_BLOCK'\r\nconst SET_LIPS_COAST = 'SET_LIPS_COAST'\r\n\r\n\r\n\r\n\r\nlet initialState = {\r\n    data: {\r\n        height: 0,\r\n        width: 0,\r\n        kol: 0,\r\n        isAmalgama: false,\r\n        lightType: \"hot\"\r\n    },\r\n    mkv: 0,\r\n    mpog: 0,\r\n    coastAmalgama: 0,\r\n    profileCoast: 95,\r\n    showInfo: false,\r\n    btnTypeCoast: 0,\r\n    coastLED: 85,\r\n    powerBlockType: 0,\r\n    coastLips: 0\r\n}\r\n\r\nconst mainReducer = (state = initialState, action) => {\r\n    switch(action.type) {\r\n        case SET_MKV:\r\n            return {...state, mkv: ((action.data.height/1000) * (action.data.width/1000))*action.data.kol }\r\n        case SET_MPOG:\r\n            return {...state, mpog: (((action.data.height/1000) + (action.data.width/1000))*action.data.kol)*2}\r\n        case SET_AMALGAMA:\r\n            return {...state, isAmalgama: action.data.isAmalgama }\r\n        case SET_AMALGAMA_COAST:\r\n            return {...state, coastAmalgama: action.data.isAmalgama ? state.coastAmalgama = state.mkv * 205 : state.coastAmalgama = 0 }\r\n        case SET_LIGHT_TYPE_COAST:\r\n            return {...state, coastLightType: state.coastLightType * state.mpog}\r\n        case SET_SHOW_INFO:\r\n            return {...state, showInfo: action.showInfo}\r\n        case SET_BUTTON_COAST:\r\n            return {...state, btnTypeCoast: action.btnTypeCoast}\r\n        case SET_POWER_BLOCK:\r\n            return {...state, powerBlockType: action.payload}\r\n        case SET_LIPS_COAST:\r\n            return {...state, coastLips: action.payload}\r\n        default: return state\r\n    }\r\n}\r\n\r\nexport const setMkv = (data) => ({type: SET_MKV, data})\r\n\r\nexport const setMpog = (data) => ({type: SET_MPOG, data})\r\n\r\nexport const setAmalgama = (data) => ({type: SET_AMALGAMA, data})\r\n\r\nexport const setAmalgamaCoast = (data  ) => ({type: SET_AMALGAMA_COAST, data})\r\n\r\nexport const setButtonCoast = (btnTypeCoast) => ({type: SET_BUTTON_COAST, btnTypeCoast})\r\n\r\nexport const showInfoToggle = (showInfo) => ({type: SET_SHOW_INFO, showInfo})\r\n\r\nexport const setPowerBlock = (payload) => ({type: SET_POWER_BLOCK, payload})\r\n\r\nexport const setLipsCoast = (payload) => ({type: SET_LIPS_COAST, payload})\r\n\r\n\r\n\r\n\r\n\r\nexport default mainReducer","import React from \"react\"\r\nimport {useDispatch, useSelector} from \"react-redux\"\r\nimport style from \"./style.module.css\"\r\nimport {\r\n    setAmalgama,\r\n    setAmalgamaCoast,\r\n    setButtonCoast,\r\n    setMkv,\r\n    setMpog,\r\n    showInfoToggle,\r\n    setPowerBlock,\r\n    setLipsCoast\r\n} from \"../store/mainReducer\";\r\n\r\n\r\nexport const InputData = () => {\r\n\r\n\r\n    const isImage = useSelector(state => state.mainReducer.data.isAmalgama)\r\n    const dispatch = useDispatch()\r\n\r\n    const choicePowerBlock = (mpog) => {\r\n        if (mpog > 2 && mpog < 0 ) {\r\n            dispatch(setPowerBlock(265))\r\n        } else if (mpog > 2 && mpog < 3 ) {\r\n            dispatch(setPowerBlock(290))\r\n        } else if (mpog > 3 && mpog < 4 ) {\r\n            dispatch(setPowerBlock(370))\r\n        } else if (mpog > 3 && mpog < 10 ) {\r\n            dispatch(setPowerBlock(450))\r\n        }\r\n    }\r\n\r\n    const choiceLips = (value) => {\r\n        if (value === \"mini\") {\r\n            dispatch(setLipsCoast(56))\r\n        } else if (value === \"middle\" || value === \"large\") {\r\n            dispatch(setLipsCoast(100))\r\n        }\r\n    }\r\n\r\n\r\n    const handleSubmit = (e) => {\r\n        e.preventDefault()\r\n        const form = e.currentTarget\r\n        let data = {\r\n            height: +form[\"height\"].value,\r\n            width: +form[\"width\"].value,\r\n            kol: +form[\"kol\"].value,\r\n            isAmalgama: form[\"isAmalgama\"].checked,\r\n            lightType: form[\"select\"].value,\r\n            btnType: form[\"btnType\"].value,\r\n            lips: form[\"select\"].value\r\n        }\r\n\r\n        choiceLips(data.lips)\r\n\r\n        const mpogLocal = ((((data.height/1000) + (data.width/1000))*data.kol)*2)\r\n        choicePowerBlock(mpogLocal)\r\n\r\n        dispatch(setMkv(data))\r\n        dispatch(setMpog(data))\r\n        dispatch(setAmalgama(data))\r\n        dispatch(setAmalgamaCoast(data))\r\n        dispatch(showInfoToggle(true))\r\n\r\n        switch (data.btnType) {\r\n            case \"sensorBtn\":\r\n                return dispatch(setButtonCoast(550))\r\n            case \"mehanicBtn\":\r\n                return dispatch(setButtonCoast(45))\r\n            default:\r\n                return dispatch(setButtonCoast(0))\r\n        }\r\n\r\n\r\n    }\r\n\r\n    return (\r\n        <div className={style.leftSide}>\r\n\r\n            <form onSubmit={handleSubmit}>\r\n                <input className={style.inp} type=\"number\" name=\"height\" placeholder=\"Высота\"/>\r\n                <input className={style.inp} type=\"number\" name=\"width\" placeholder=\"Ширина\"/>\r\n                <input className={style.inp} type=\"number\" name=\"kol\" placeholder=\"Кол-во\"/>\r\n\r\n                <div className={style.isAmalg}>\r\n                    <label className={style.label} htmlFor=\"isAmalgama\">Снятие Амальгамы:\r\n                        <input type=\"checkbox\" name=\"isAmalgama\"/>\r\n                    </label>\r\n                </div>\r\n\r\n                {isImage ? <input placeholder='введите номер картинки их каталога'/> : ''\r\n\r\n                }\r\n\r\n                <div className={style.lips}>\r\n                    <label className={style.label} htmlFor=\"select\">ЛИПЫ (крепления):\r\n                    <select name=\"select\" className={style.select}>\r\n                        <option value=\"mini\" >100 * 100 (2шт)</option>\r\n                        <option value=\"middle\" >100 * 100 (2шт)</option>\r\n                        <option value=\"large\" >100 * 100 (2шт)</option>\r\n                    </select>\r\n                    </label>\r\n                </div>\r\n\r\n                <div className={style.selectBtnType}>\r\n                    <div>\r\n                        <input type=\"radio\" value=\"sensorBtn\" name=\"btnType\"/>\r\n                        <label htmlFor=\"sensorBtn\">Сенсорная кнопка</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" value=\"mehanicBtn\" name=\"btnType\"/>\r\n                        <label htmlFor=\"mehanicBtn\">Механическая кнопка</label>\r\n                    </div>\r\n                    <div>\r\n                        <input type=\"radio\" value=\"noBtn\" name=\"btnType\"/>\r\n                        <label htmlFor=\"noBtn\">Без Кнопки</label>\r\n                    </div>\r\n\r\n                </div>\r\n                <button type=\"submit\" className={style.getBtn}>Считаем!</button>\r\n            </form>\r\n\r\n        </div>\r\n\r\n    )\r\n}","import React from 'react'\r\nimport style from './style.module.css'\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {showInfoToggle} from \"../store/mainReducer\"\r\n\r\nexport const ShowInfo = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const mkv = useSelector(state => state.mainReducer.mkv)\r\n    const mpog = useSelector(state => state.mainReducer.mpog)\r\n    const coastAmalgama = useSelector(state => state.mainReducer.coastAmalgama)\r\n    const coastLED = useSelector(state => state.mainReducer.coastLED)\r\n    const profileCoast = useSelector(state => state.mainReducer.profileCoast)\r\n    const btnTypeCoast = useSelector(state => state.mainReducer.btnTypeCoast)\r\n    const powerBlockType = useSelector(state => state.mainReducer.powerBlockType)\r\n    const coastLips = useSelector(state => state.mainReducer.coastLips)\r\n\r\n    const close = () => {\r\n        dispatch(showInfoToggle(false))\r\n    }\r\n\r\n\r\n\r\n    return(\r\n        <div className={style.showInfoBlock}>\r\n            <div className=\"resItem\">Зеркало с полировкой: {((mkv * 514) + (mpog * 29)).toFixed(2)} </div>\r\n            <div className=\"resItem\">Профиль: {(mpog * profileCoast).toFixed(2)} </div>\r\n            <div className=\"resItem\">Лента светодиодная: {(mpog * coastLED).toFixed(2)} </div>\r\n            <div className=\"resItem\">Снятие амальгамы: {(mkv * coastAmalgama).toFixed(2)} </div>\r\n            <div className=\"resItem\">Кнопка: {btnTypeCoast.toFixed(2)} </div>\r\n            <div className=\"resItem\">Блок питания: {powerBlockType} </div>\r\n            <div className=\"resItem\">Крепление: {coastLips} </div>\r\n\r\n            <button onClick={() => close()}>закрыть</button>\r\n        </div>\r\n    )\r\n}\r\n\r\n","import React from \"react\"\r\nimport style from \"./style.module.css\"\r\nimport {useSelector, useDispatch} from \"react-redux\";\r\nimport {NavLink} from \"react-router-dom\";\r\nimport {ShowInfo} from \"./ShowInfo\"\r\nimport {showInfoToggle} from \"../store/mainReducer\"\r\n\r\n\r\nexport const ResultData = () => {\r\n\r\n    const dispatch = useDispatch()\r\n\r\n    const mkv = useSelector(state => state.mainReducer.mkv)\r\n    const mpog = useSelector(state => state.mainReducer.mpog)\r\n    const coastAmalgama = useSelector(state => state.mainReducer.coastAmalgama)\r\n    const profileCoast = useSelector(state => state.mainReducer.profileCoast)\r\n    const showInfo = useSelector(state => state.mainReducer.showInfo)\r\n    const btnTypeCoast = useSelector(state => state.mainReducer.btnTypeCoast)\r\n    const coastLED = useSelector(state => state.mainReducer.coastLED)\r\n    const powerBlockType = useSelector(state => state.mainReducer.powerBlockType)\r\n    const coastLips = useSelector(state => state.mainReducer.coastLips)\r\n\r\n    const openInfo = () => {\r\n        dispatch(showInfoToggle(true))\r\n    }\r\n\r\n\r\n\r\n\r\n    let summ = (mkv * 514) + (mpog * 29) + (mkv * coastAmalgama) + (mpog * coastLED)\r\n               + (mpog * profileCoast) + btnTypeCoast + powerBlockType + coastLips\r\n\r\n\r\n\r\n\r\n\r\n    return(\r\n        <div className={style.rightSide}>\r\n            <div className={style.results}>м.кв: {mkv.toFixed(2)}</div>\r\n            <div className={style.results}>м.пог: {mpog.toFixed(2)}</div>\r\n            <div className={style.summ}>Сумма: {summ.toFixed(2) }</div>\r\n            <button onClick={() => openInfo()}>Детальнее</button>\r\n            {showInfo ? <ShowInfo/> : <div> </div>}\r\n        </div>\r\n    )\r\n}","export default __webpack_public_path__ + \"static/media/logo.65c945ae.png\";","import React from 'react'\r\nimport style from './style.module.css'\r\nimport logo from '../img/logo.png'\r\n\r\nexport const Header = () => {\r\n    return(\r\n        <div className={style.header}>\r\n            <span className={style.logo}>\r\n                <img src={logo}/>\r\n                <a href=\"https://dekor.ua\"> www.dekor.ua </a>\r\n            </span>\r\n        </div>\r\n    )\r\n}","import React from 'react'\nimport style from './style.module.css'\nimport {InputData} from \"./components/InputData\";\nimport {ResultData} from \"./components/ResultData\";\nimport {Header} from \"./components/Header\";\nimport {BrowserRouter, HashRouter, Route} from \"react-router-dom\";\nimport {ShowInfo} from \"./components/ShowInfo\";\n\nconst App = (props) => {\n  return (\n      <HashRouter>\n        <div className={style.wrapper}>\n\n            <Header/>\n            <div className={style.leftSide}><InputData/></div>\n            <div className={style.rightSide}><ResultData/></div>\n\n            <Route path=\"/showInfo\" render={() => <ShowInfo/>}  />\n        </div>\n\n      </HashRouter>\n  )\n}\n\nexport default App;\n","import {combineReducers, createStore} from 'redux'\r\nimport mainReducer from \"./mainReducer\";\r\n\r\n\r\nconst rootReducer = combineReducers({\r\n    mainReducer\r\n})\r\n\r\nconst store = createStore(rootReducer)\r\n\r\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nimport store from \"./store/store\";\nimport {Provider} from \"react-redux\";\n\n\nReactDOM.render(\n    <Provider store={store}>\n        <App />\n    </Provider>,\n  document.getElementById('root')\n);\n\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"getBtn\":\"style_getBtn__2wsCY\",\"results\":\"style_results__2u9Tc\",\"rightSide\":\"style_rightSide__1fqCM\",\"inp\":\"style_inp__1k_jF\",\"summ\":\"style_summ__28m6E\",\"isAmalg\":\"style_isAmalg__2YIBz\",\"select\":\"style_select__2Xaht\",\"label\":\"style_label__2_FT7\",\"selectBtnType\":\"style_selectBtnType__2Oioy\",\"showInfo\":\"style_showInfo__2KFcy\",\"logo\":\"style_logo__3jEMh\",\"header\":\"style_header__Wj1w4\",\"showInfoBlock\":\"style_showInfoBlock__M5x42\",\"lips\":\"style_lips__3wnwa\"};"],"sourceRoot":""}